{"version":3,"file":"static/js/891.24e708dc.chunk.js","mappings":"8PAgCA,EA9BkB,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,UACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAWA,OACE,gCACG,KACD,kBAAMC,SAZW,SAAAC,GACnBA,EAAEC,iBACFN,EAAUE,EACX,EASG,WACE,kBACEK,KAAK,OACLC,YAAY,gBACZC,KAAK,SACLC,MAAOR,EACPS,SAba,SAAAN,GACnB,IAAQK,EAAUL,EAAEO,OAAZF,MACRP,EAAUO,EACX,KAaK,mBAAQH,KAAK,SAAb,SAAsB,gBAI7B,E,SCgBD,EAvCe,WACb,OAAwCM,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4Bd,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAMXjB,EAASY,EAAaM,IAAI,WAEhCC,EAAAA,EAAAA,YAAU,WACR,GAAInB,EAAQ,CACV,IAAMoB,EAAQ,mCAAG,uGACQC,EAAAA,EAAAA,IAAcrB,GADtB,gBACPsB,EADO,EACPA,KACRP,EAAUO,EAAKC,SAFA,2CAAH,qDAIdH,GACD,CACF,GAAE,CAACpB,IAEJ,IAAMwB,EAASV,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACxB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMd,GAA1C,UACE,uBAAIW,OAFCD,EADe,IAQ1B,OACE,iCACE,SAAC,EAAD,CAAW5B,UA1BG,SAAAE,GAChBa,EAAgB,CAAEb,OAAAA,GACnB,KAyBG,0BACE,wBAAKwB,QAIZ,C,2JCxCKO,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCASHd,EAAgB,SAAArB,GAAM,OACjC+B,EAASb,IAAT,gBAA8B,CAC5BgB,OAAQ,CACNE,MAAOpC,IAHsB,EAOtBqC,EAAiB,SAAAX,GAAE,OAAIK,EAASb,IAAT,iBAAuBQ,EAAvB,mBAAJ,EAEnBY,EAAqB,kBAAMP,EAASb,IAAT,sBAAN,EAErBqB,EAAmB,SAAAb,GAAE,OAAIK,EAASb,IAAT,iBAAuBQ,EAAvB,YAAJ,EAErBc,EAAsB,SAAAd,GAAE,OAAIK,EAASb,IAAT,iBAAuBQ,EAAvB,YAAJ,C","sources":["components/CinemaSearch/componentsCinema/SearchBox/SearchBox.jsx","components/CinemaSearch/pages/Movies/Movies.jsx","shared/services/film-API.js"],"sourcesContent":["import { useState } from 'react';\n\nconst SearchBox = ({ getSearch }) => {\n  const [search, setSearch] = useState('');\n\n  const handleSabmit = e => {\n    e.preventDefault();\n    getSearch(search);\n  };\n\n  const hendleSearch = e => {\n    const { value } = e.target;\n    setSearch(value);\n  };\n  return (\n    <>\n      {' '}\n      <form onSubmit={handleSabmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search movies\"\n          name=\"search\"\n          value={search}\n          onChange={hendleSearch}\n        />\n\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\nexport default SearchBox;\n","import { useState, useEffect } from 'react';\n\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nimport SearchBox from 'components/CinemaSearch/componentsCinema/SearchBox/SearchBox';\nimport { searchFilmApi } from 'shared/services/film-API';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const getSearch = search => {\n    setSearchParams({ search });\n  };\n\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    if (search) {\n      const response = async () => {\n        const { data } = await searchFilmApi(search);\n        setMovies(data.results);\n      };\n      response();\n    }\n  }, [search]);\n\n  const render = movies.map(({ id, original_title }) => (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <p>{original_title}</p>\n      </Link>\n    </li>\n  ));\n\n  return (\n    <>\n      <SearchBox getSearch={getSearch} />\n      <div>\n        <ul>{render}</ul>\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '6c57fb02719926393bb8c06aa147886f';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const searchFilmApi = search =>\n  instance.get(`/search/movie`, {\n    params: {\n      query: search, // Используйте параметр \"query\" для передачи поискового запроса\n    },\n  });\n\nexport const searchFilmByID = id => instance.get(`/movie/${id}&language=en-US`);\n\nexport const searchFilmTrending = () => instance.get(`/trending/movie/day`);\n\nexport const searchFilmByCast = id => instance.get(`/movie/${id}/credits`);\n\nexport const searchFilmByReviews = id => instance.get(`/movie/${id}/reviews`);\n"],"names":["getSearch","useState","search","setSearch","onSubmit","e","preventDefault","type","placeholder","name","value","onChange","target","useSearchParams","searchParams","setSearchParams","movies","setMovies","location","useLocation","get","useEffect","response","searchFilmApi","data","results","render","map","id","original_title","to","state","from","instance","axios","baseURL","params","api_key","query","searchFilmByID","searchFilmTrending","searchFilmByCast","searchFilmByReviews"],"sourceRoot":""}